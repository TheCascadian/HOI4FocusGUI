name: Notify Discord

on:
  push:
    branches:
      - main
      - '**'  # Triggers on pushes to any branch
  release:
    types: [published, edited, created, released, prereleased]
  workflow_dispatch:  # Allows manual triggering

jobs:
  notify-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Send Release Notification to Discord
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          RELEASE_TYPE="${{ github.event.release.prerelease }}"
          if [ "$RELEASE_TYPE" = "true" ]; then
            TYPE_LABEL="Pre-Release"
            COLOR="16776960"  # Yellow
          else
            TYPE_LABEL="Release"
            COLOR="5763719"  # Green
          fi
          
          ACTION="${{ github.event.action }}"
          if [ "$ACTION" = "edited" ]; then
            TITLE="Release Updated: ${{ github.event.release.name }}"
          elif [ "$ACTION" = "prereleased" ]; then
            TITLE="New Pre-Release: ${{ github.event.release.name }}"
          else
            TITLE="New Release: ${{ github.event.release.name }}"
          fi
          
          BODY=$(echo '${{ github.event.release.body }}' | jq -Rs . | cut -c 2- | rev | cut -c 2- | rev)
          if [ ${#BODY} -gt 1000 ]; then
            BODY="${BODY:0:1000}..."
          fi
          
          curl -H "Content-Type: application/json" \
               -d '{
                 "embeds": [{
                   "title": "'"$TITLE"'",
                   "description": "'"$BODY"'",
                   "color": '"$COLOR"',
                   "fields": [
                     {
                       "name": "Version",
                       "value": "'"${{ github.event.release.tag_name }}"'",
                       "inline": true
                     },
                     {
                       "name": "Type",
                       "value": "'"$TYPE_LABEL"'",
                       "inline": true
                     },
                     {
                       "name": "Author",
                       "value": "'"${{ github.event.release.author.login }}"'",
                       "inline": true
                     }
                   ],
                   "url": "'"${{ github.event.release.html_url }}"'",
                   "timestamp": "'"${{ github.event.release.published_at }}"'"
                 }]
               }' \
               "$WEBHOOK_URL"

  notify-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Send Push Notification to Discord
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
          COMMIT_SHA_SHORT="${{ github.sha }}"
          COMMIT_SHA_SHORT="${COMMIT_SHA_SHORT:0:7}"
          BRANCH_NAME="${{ github.ref_name }}"
          
          # Get modified/added/removed files from the event
          ADDED=$(echo '${{ toJson(github.event.head_commit.added) }}' | jq -r '.[]' | head -5)
          MODIFIED=$(echo '${{ toJson(github.event.head_commit.modified) }}' | jq -r '.[]' | head -5)
          REMOVED=$(echo '${{ toJson(github.event.head_commit.removed) }}' | jq -r '.[]' | head -5)
          
          FILES_DISPLAY=""
          [ -n "$ADDED" ] && FILES_DISPLAY="${FILES_DISPLAY}Added:\n${ADDED}\n"
          [ -n "$MODIFIED" ] && FILES_DISPLAY="${FILES_DISPLAY}Modified:\n${MODIFIED}\n"
          [ -n "$REMOVED" ] && FILES_DISPLAY="${FILES_DISPLAY}Removed:\n${REMOVED}\n"
          
          if [ -z "$FILES_DISPLAY" ]; then
            FILES_DISPLAY="No file changes detected"
          fi
          
          # Escape special characters for JSON
          COMMIT_MSG=$(echo "$COMMIT_MSG" | jq -Rs .)
          FILES_DISPLAY=$(echo -e "$FILES_DISPLAY" | jq -Rs .)
          
          FILE_COUNT=$(($(echo '${{ toJson(github.event.head_commit.added) }}' | jq '. | length') + $(echo '${{ toJson(github.event.head_commit.modified) }}' | jq '. | length') + $(echo '${{ toJson(github.event.head_commit.removed) }}' | jq '. | length')))
          
          curl -H "Content-Type: application/json" \
               -d '{
                 "embeds": [{
                   "title": "New Push to '"$BRANCH_NAME"'",
                   "description": '"$COMMIT_MSG"',
                   "color": 3447003,
                   "fields": [
                     {
                       "name": "Commit",
                       "value": "[`'"$COMMIT_SHA_SHORT"'`]('"${{ github.event.head_commit.url }}"')",
                       "inline": true
                     },
                     {
                       "name": "Author",
                       "value": "'"$COMMIT_AUTHOR"'",
                       "inline": true
                     },
                     {
                       "name": "Branch",
                       "value": "'"$BRANCH_NAME"'",
                       "inline": true
                     },
                     {
                       "name": "Files Changed ('"$FILE_COUNT"')",
                       "value": "```\n'"$(echo "$FILES_DISPLAY" | cut -c 2- | rev | cut -c 2- | rev)"'\n```",
                       "inline": false
                     }
                   ],
                   "url": "'"${{ github.event.head_commit.url }}"'",
                   "timestamp": "'"${{ github.event.head_commit.timestamp }}"'"
                 }]
               }' \
               "$WEBHOOK_URL"